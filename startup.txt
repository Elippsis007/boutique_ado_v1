-- Installing Django (**Needs to be done on each launch)
1. pip3 install Django==3.2


-- Creating project in the current directory (** Necessary for launching project again.)
2. django-admin startproject boutique_ado .


-- Create gitignore file (**Not necessary for launching project again.)
3. touch .gitignore


-- Run server
4. python3 manage.py runserver


-- Migrations
5. python3 manage.py migrate


-- Create a superuser so I can login into admin console.
6. python3 manage.py createsuperuser (**Not necessary for launching project again.)
    admin / Cristina007


-- Installing Allauth
7. pip3 install django-allauth==0.41.0 (** Necessary for launching project again.)
    
    7.2 ** Be sure to get the Allauth "AUTHENTICATION_BACKENDS" to add to our "settings.py" file.

        AUTHENTICATION_BACKENDS = [

    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
]

    7.3 ** Be sure to get the "installed apps" from the document and add to "settings.py" file

    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',


-- Add SITE_ID = 1 to the settings.py
8. Add SITE_ID = 1 under AUTHENTICATION_BACKENDS


-- Adding allauth URLS to our project "urls.py" file.
    * Creating a path called accounts/ and it's used to include all of the allauth.urls
9. Create a "path" => path('accounts/', include('allauth.urls')), 


-- Adding "include to "urls.py" file 
10. In "urls.py" on the line => from django.urls import path, "include" needs to be added 
    Gives me all the urls I need for the login, logout, password resets etc.


-- Run the server and navigate to /admin url to login
11. Login to the admin console


-- Change sites domain
12. Navigate to sites and give name of site eg. boutique_ado.example.com
    Change your display name to eg. Boutique Ado
    ** This is a critical setting if I am using social media authentication
        This isn't something I am doing now but no harm in doing it in the case that we would
        use social media authentication in the future.


-- Adding EMAIL_BACKEND to "settings.py" file
13.  By default allauth will send confirmation emails to ANY NEW accounts
     Those emails have to be temporarily logged to the console so we can get the confirmation links

     EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' => Add this under SITE_ID in "settings.py"


-- Additional settings for the "settings.py" file

14. ACCOUNT_AUTHENTICATION_METHOD = 'username_email' --> Tells allauth that we want to allow authentication using either usernames/emails
    ACCOUNT_EMAIL_REQUIRED = True --> Tells that email is required for registering for the site
    ACCOUNT_EMAIL_VERIFICATION = 'mandatory' --> Mandatory for an email address
    ACCOUNT_SIGNUP_EMAIL_ENTER_TWICE = True --> Will be required for the user to enter their email twice upon registration to eliminate typos
    ACCOUNT_USERNAME_MIN_LENGTH = 4 --> Specifies username characther length
    LOGIN_URL = '/accounts/login/' --> Specifying a login url
    LOGIN_REDIRECT_URL = '/success' --> Specifying a url to redirect back to after user logging in.  


-- Would be a good idea to "freeze-requirements"
15. pip3 freeze > requirements.txt


-- Create templates directory for me to write some frontend code
16. mkdir templates

-- Create allauth template to hold the customized allauth templates
17. mkdir templates/allauth


-- Making a copy of the "allauth" templates for customizaton
18. cp -r ../.pip-modules/lib/python3.8/site-packages/allauth/templates/* ./templates/allauth/
    * Will create a list of files inside "templates/allauth"
    

-- Creating a base.html
19. Right click on the templates directory folder and create new file for our base.html file
    Here we should go to Bootstrap to get a boilerplate template for the website.
    ** import jQuery 


   <!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

    <title>Hello, world!</title>
  </head>
  <body>
    <h1>Hello, world!</h1>

    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
  </body>
</html>



-- Add compatiability support for Edge - To elimiate validation errors when validation HTML
20. <meta http-equiv="X-UA-Compatible" content="ie=edge">
    Add this line of code above UTF-8


-- Move the JScript src under above the title so that it loads faster
21.


-- Add "load static" to the top of the page above our doc string
22. Add {% load static %} 
    * Advisable now to commit changes

    





